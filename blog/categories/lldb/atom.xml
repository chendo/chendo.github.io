<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: lldb | chendo]]></title>
  <link href="http://chendo.github.io/blog/categories/lldb/atom.xml" rel="self"/>
  <link href="http://chendo.github.io/"/>
  <updated>2018-11-02T14:13:11+11:00</updated>
  <id>http://chendo.github.io/</id>
  <author>
    <name><![CDATA[chendo]]></name>
    <email><![CDATA[blog@chen.do]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Visualising CGRects and NSRects from lldb with drawrect]]></title>
    <link href="http://chendo.github.io/blog/2013/10/04/visualising-rects-from-lldb/"/>
    <updated>2013-10-04T16:38:00+10:00</updated>
    <id>http://chendo.github.io/blog/2013/10/04/visualising-rects-from-lldb</id>
    <content type="html"><![CDATA[<p>Halfway through debugging the new enumeration engine for <a href="https://shortcatapp.com/">Shortcat</a>, I realised I needed a way to visualise <code>CGRect</code>/<code>NSRect</code>s while debugging. Trying to figure out how one <code>CGRect</code> relates to another by looking at four numbers is a PITA.</p>

<p>I decided to write a tool to solve this problem. I also took the chance to actually develop an app with <a href="http://rubymotion.com">RubyMotion</a>.</p>

<h2>Introducing <code>drawrect</code></h2>

<p><a href="https://github.com/chendo/drawrect"><code>drawrect</code></a> is a command line tool for OS X that simply draws translucent rectangles on the screen.</p>

<p><img src="https://github.com/chendo/drawrect/raw/master/screenshot.png" alt="Screenshot" /></p>

<p>You can use it from within <code>lldb</code> (provided you installed the scripts) or from the command line.</p>

<h2>Usage</h2>

<h4>Within <code>lldb</code></h4>

<p>```
dr <rect expression>     # This will get the string representation of</p>

<pre><code>                     # the rect returned by the expression and draw it
</code></pre>

<p>dr window.frame          # This will draw a rect of the window&rsquo;s frame</p>

<p>drf <rect expression>    # This is the same as above, but where the origin</p>

<pre><code>                     # of the rect is from the top left
</code></pre>

<p>dc                       # Removes all the rects
```</p>

<h4>Command line</h4>

<p>```bash
drawrect rect <rect> [label] [colour] [opacity]           # Draws a rect at <rect> coordinates with [label], background colour in hex [colour] with opacity [opacity]
drawrect flipped_rect <rect> [label] [colour] [opacity]   # Same as above, but from top-left origin</p>

<p>drawrect rect 100,100,100,100 Hello 00ff00 0.3            # Draws a rect at origin 100,100 with size 100,100, text &ldquo;Hello&rdquo;, translucent green background
drawrect clear     # Clears rect
drawrect quit      # Quits the drawrect process
drawrect help      # Shows help
drawrect version   # Shows version
```</p>

<h2>Future improvements</h2>

<p>I couldn&rsquo;t find a way to hook into process termination or resuming in <code>lldb</code>, so you would have to clear the rects manually with <code>drc</code> in <code>lldb</code>. If someone knows how to do this, please let me know in the comments!</p>

<p>I&rsquo;d like to add a feature where you could hover over a <code>CGRect</code> or <code>NSRect</code> in the Variable view and it would highlight, but I&rsquo;m not sure how to do this without resorting to Accessibility.</p>

<p>I hope <code>drawrect</code> is useful to others! Let me know if this has been useful to you.</p>
]]></content>
  </entry>
  
</feed>
