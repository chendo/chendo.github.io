<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: osx | chendo]]></title>
  <link href="http://chendo.github.io/blog/categories/osx/atom.xml" rel="self"/>
  <link href="http://chendo.github.io/"/>
  <updated>2018-11-02T14:13:11+11:00</updated>
  <id>http://chendo.github.io/</id>
  <author>
    <name><![CDATA[chendo]]></name>
    <email><![CDATA[blog@chen.do]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Simulating out of order packets on OS X]]></title>
    <link href="http://chendo.github.io/blog/2014/10/11/simulating-out-of-order-packets-on-os-x/"/>
    <updated>2014-10-11T17:51:00+11:00</updated>
    <id>http://chendo.github.io/blog/2014/10/11/simulating-out-of-order-packets-on-os-x</id>
    <content type="html"><![CDATA[<p>I needed a way to simulate out of order packets in order to try to reproduce an issue I&rsquo;ve been seeing at work, and I figured out a fairly simple way that only involves <code>ipfw</code> which is built-in on 10.9 but unfortunately has been removed in 10.10. The same technique should be adaptable to <code>pfctl</code> though.</p>

<h2>Step 1 &ndash; Creating a pipe</h2>

<p>To be able to simulate out of order packets, you must create a pipe in <code>ipfw</code> with a rule that matches the traffic you&rsquo;re trying to affect.</p>

<p><code>sudo ipfw add 1 pipe 1 ip from &lt;host&gt; to me</code></p>

<p>You must create another pipe if you want to affect traffic in the opposite direction.</p>

<p><code>sudo ipfw add 2 pipe 1 ip from me to &lt;host&gt;</code></p>

<h2>Step 2 &ndash; Simulate out of order packets</h2>

<p><code>ipfw</code> lets you set a bunch of config options on traffic flowing through a pipe. You can limit the amount of bandwidth with <code>bw &lt;speed&gt;</code>, packet loss with <code>plr &lt;rate&gt;</code>, and latency with <code>delay &lt;time&gt;</code>.</p>

<p>So to simulate 1 second latency, we would run:</p>

<p><code>sudo ipfw pipe 1 config delay 1s</code></p>

<p>However, this doesn&rsquo;t simulate out of order packets by itself. You can simulate packet loss which can induce out of order packets with:</p>

<p><code>sudo ipfw pipe 1 config plr 0.05 # 5% packet loss</code></p>

<p>But I believe I found a better solution (IMO) by constantly setting the delay to random values every couple of milliseconds.</p>

<p><code>
sudo ruby -e "loop { \\`ipfw pipe 1 config delay #{rand(500) + 100}ms\\`; sleep 0.01 }"
</code></p>

<p>where the delay is randomly set to (0-500) + 100ms every 10ms.</p>

<h2>Step 3 &ndash; Clean up</h2>

<p>Once you&rsquo;re done with your testing, be sure to remove the rules.</p>

<p><code>sudo ipfw del 1</code></p>

<h2>Conclusion</h2>

<p>This worked well enough for me, and I hope it helps you too. If someone figures out how to do this with <code>pfctl</code> on 10.10, please let me know!</p>
]]></content>
  </entry>
  
</feed>
